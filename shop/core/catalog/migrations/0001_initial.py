# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2020-09-13 18:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import redactor.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shop', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Add_Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255, verbose_name='Доп. Артикул')),
            ],
            options={
                'verbose_name': 'Доп. Артикул',
                'verbose_name_plural': 'Доп. Артикул',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Атрибут',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cached', models.BooleanField(default=False)),
                ('country', models.CharField(max_length=255, verbose_name='Страна производитель')),
                ('active', models.BooleanField(default=False, verbose_name='Сделать ссылкой?')),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='URL')),
                ('image', models.ImageField(blank=True, null=True, upload_to='brand/', verbose_name='Картинка')),
            ],
            options={
                'verbose_name': 'Производители',
                'verbose_name_plural': 'Производители',
                'ordering': ['description__name'],
            },
        ),
        migrations.CreateModel(
            name='BrandDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('text', redactor.fields.RedactorField(null=True, verbose_name='Описание')),
                ('title', models.CharField(max_length=255, null=True)),
                ('meta_description', models.CharField(max_length=255, null=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Language')),
            ],
            options={
                'db_table': 'brand_description',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cached', models.BooleanField(default=False)),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='URL')),
                ('image', models.ImageField(blank=True, null=True, upload_to='data/category/', verbose_name='Картинка')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=1, verbose_name='Активна')),
                ('bgcolor', models.CharField(max_length=20, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'Категории',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Category_Thumb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255)),
                ('size', models.PositiveIntegerField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumb', to='catalog.Category')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('text', redactor.fields.RedactorField(null=True, verbose_name='Описание')),
                ('title', models.CharField(max_length=255, null=True)),
                ('meta_description', models.CharField(max_length=255, null=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Language')),
            ],
            options={
                'db_table': 'category_description',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cached', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.CharField(max_length=255, unique=True, verbose_name='URL')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Города',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='CityDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('text', redactor.fields.RedactorField(null=True, verbose_name='Описание')),
                ('title', models.CharField(max_length=255, null=True)),
                ('meta_description', models.CharField(max_length=255, null=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Language')),
            ],
            options={
                'db_table': 'city_description',
            },
        ),
        migrations.CreateModel(
            name='Featured',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Category')),
            ],
            options={
                'verbose_name': 'Рекомендуемые наборы',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255, verbose_name='Автор')),
                ('text', models.CharField(max_length=1500, verbose_name='Текст')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalog.Feedback', verbose_name='Родитель')),
            ],
            options={
                'verbose_name': 'Отзывы',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, max_length=255, upload_to='data/products/%Y/%m/%d', verbose_name='Картинка')),
                ('position', models.PositiveIntegerField(blank=True, default=0, verbose_name='Порядоковый номер')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Изображения',
                'verbose_name_plural': 'Изображения',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cached', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.CharField(max_length=255, null=True, verbose_name='URL')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('view', models.CharField(default='Page', max_length=20)),
                ('position', models.PositiveIntegerField(choices=[(1, 'header_menu'), (2, 'footer_menu')], null=True)),
            ],
            options={
                'verbose_name': 'Простые страницы',
                'verbose_name_plural': 'Простые страницы',
            },
        ),
        migrations.CreateModel(
            name='PageDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('text', redactor.fields.RedactorField(null=True, verbose_name='Описание')),
                ('title', models.CharField(max_length=255, null=True)),
                ('meta_description', models.CharField(max_length=255, null=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Language')),
            ],
            options={
                'db_table': 'page_description',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cached', models.BooleanField(default=False)),
                ('model', models.CharField(max_length=50, unique=True, verbose_name='Артикул')),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='URL')),
                ('big_opt_price', models.PositiveIntegerField(default=0, verbose_name='Биг-оптовая цена')),
                ('retail_price', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('purchase_price', models.PositiveIntegerField(default=0, verbose_name='Закупочная цена')),
                ('length', models.CharField(max_length=50, null=True, verbose_name='Длина')),
                ('width', models.CharField(max_length=50, null=True, verbose_name='Ширина')),
                ('height', models.CharField(max_length=50, null=True, verbose_name='Высота')),
                ('is_available', models.BooleanField(default=0, verbose_name='В наличии')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('price_fixed', models.BooleanField(default=0, verbose_name='Фикс.')),
                ('storage', models.PositiveIntegerField(choices=[(1, 'Default'), (2, 'Default1')], default=1, null=True, verbose_name='Склад')),
                ('rating', models.PositiveIntegerField(default=5)),
                ('qty', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'Товары',
                'verbose_name_plural': 'Товары',
                'ordering': ['-is_available', '-last_modified'],
            },
        ),
        migrations.CreateModel(
            name='ProductDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('text', redactor.fields.RedactorField(null=True, verbose_name='Описание')),
                ('title', models.CharField(max_length=255, null=True)),
                ('meta_description', models.CharField(max_length=255, null=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Language')),
            ],
            options={
                'db_table': 'product_description',
            },
        ),
        migrations.CreateModel(
            name='Prom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('prom_id', models.CharField(max_length=255, verbose_name='prom_id')),
                ('link', models.CharField(max_length=255, null=True, verbose_name='Ссылка')),
                ('percent', models.FloatField(default=0.1, verbose_name='Наценка')),
                ('full_store', models.BooleanField(default=0, verbose_name='Все товары?')),
            ],
            options={
                'verbose_name': 'Prom',
                'verbose_name_plural': 'Prom',
            },
        ),
        migrations.CreateModel(
            name='Prom_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prom_category_id', models.PositiveIntegerField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proms', to='catalog.Category')),
                ('prom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='catalog.Prom')),
            ],
            options={
                'verbose_name': 'ID Категории Prom',
                'verbose_name_plural': 'ID Категории Prom',
            },
        ),
        migrations.CreateModel(
            name='Slug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=255, null=True, unique=True)),
                ('view', models.CharField(max_length=20)),
                ('model', models.CharField(max_length=20, null=True)),
                ('model_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cached', models.BooleanField(default=False)),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='URL')),
                ('image', models.ImageField(blank=True, null=True, upload_to='data/tag/', verbose_name='Картинка')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Теги',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='TagDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('text', redactor.fields.RedactorField(null=True, verbose_name='Описание')),
                ('title', models.CharField(max_length=255, null=True)),
                ('meta_description', models.CharField(max_length=255, null=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Language')),
            ],
            options={
                'db_table': 'tag_description',
            },
        ),
        migrations.CreateModel(
            name='Thumb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255)),
                ('size', models.PositiveIntegerField()),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumb', to='catalog.Gallery')),
            ],
        ),
        migrations.CreateModel(
            name='TigresCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, verbose_name='URL')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.Category', verbose_name='Катигория')),
            ],
            options={
                'verbose_name': 'Tigres Категории для парсинга',
                'verbose_name_plural': 'Tigres Категории для парсинга',
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='Значение')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='catalog.Attribute')),
            ],
            options={
                'verbose_name': 'Значение',
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='catalog.Product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Рекомендуемые',
                'verbose_name_plural': 'Рекомендуемые',
            },
        ),
        migrations.CreateModel(
            name='Popular',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='catalog.Product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Популярные',
                'verbose_name_plural': 'Популярные',
            },
        ),
        migrations.CreateModel(
            name='Special',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='catalog.Product', verbose_name='Товар')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Спец.Цена')),
                ('percent', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Акции',
                'verbose_name_plural': 'Акции',
            },
        ),
        migrations.AddField(
            model_name='tag',
            name='description',
            field=models.ManyToManyField(to='catalog.TagDescription'),
        ),
        migrations.AddField(
            model_name='product',
            name='attributes',
            field=models.ManyToManyField(related_name='products', to='catalog.Value', verbose_name='Атрибуты'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product', to='catalog.Brand', verbose_name='Производитель'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ManyToManyField(related_name='products', to='catalog.Category', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='product',
            name='description',
            field=models.ManyToManyField(to='catalog.ProductDescription'),
        ),
        migrations.AddField(
            model_name='product',
            name='featured',
            field=models.ManyToManyField(blank=True, related_name='_product_featured_+', to='catalog.Product', verbose_name='Похожие товары'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(related_name='products', to='catalog.Tag', verbose_name='Теги'),
        ),
        migrations.AddField(
            model_name='page',
            name='description',
            field=models.ManyToManyField(to='catalog.PageDescription'),
        ),
        migrations.AddField(
            model_name='gallery',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='catalog.Product'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='catalog.Product'),
        ),
        migrations.AddField(
            model_name='featured',
            name='products',
            field=models.ManyToManyField(related_name='related', to='catalog.Product'),
        ),
        migrations.AddField(
            model_name='city',
            name='description',
            field=models.ManyToManyField(to='catalog.CityDescription'),
        ),
        migrations.AddField(
            model_name='category',
            name='description',
            field=models.ManyToManyField(to='catalog.CategoryDescription'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='catalog.Category', verbose_name='Родитель'),
        ),
        migrations.AddField(
            model_name='brand',
            name='description',
            field=models.ManyToManyField(to='catalog.BrandDescription'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='catalog.Category'),
        ),
        migrations.AddField(
            model_name='add_model',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_model', to='catalog.Product'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together=set([('slug', 'parent')]),
        ),
    ]
